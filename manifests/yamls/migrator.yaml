apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-migrate-devtron
spec:
  template:
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      initContainers:
        - command:
            - /bin/sh
            - -c
            - cp -r /scripts/ /shared/
          image: quay.io/devtron/test:e4758a86-1392-10818
          name: init-devtron
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      containers:
      - command:
            - /bin/sh
            - -c
            - 'if [ $(MIGRATE_TO_VERSION) -eq "0" ]; then migrate -path $(SCRIPT_LOCATION) -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable up;  else   echo $(MIGRATE_TO_VERSION); migrate -path $(SCRIPT_LOCATION)  -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable goto $(MIGRATE_TO_VERSION);    fi '
          env:
            - name: SCRIPT_LOCATION
              value: /shared/sql/
            - name: DB_TYPE
              value: postgres
            - name: DB_USER_NAME
              value: postgres
            - name: DB_HOST
              value: postgresql-postgresql.devtroncd
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: orchestrator
            - name: MIGRATE_TO_VERSION
              value: "0"
          envFrom:
            - secretRef:
                name: postgresql-migrator   
          image: migrate/migrate
          name: postgresql-migrate-devtron
          volumeMounts:
            - mountPath: /shared
              name: shared-volume      
      restartPolicy: OnFailure
      imagePullSecrets:
      - name: devtron-image-pull
      volumes:
        - emptyDir: {}
          name: shared-volume 
  backoffLimit: 20
  activeDeadlineSeconds: 1500
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-migrate-casbin
spec:
  template:
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      initContainers:
        - command:
            - /bin/sh
            - -c
            - cp -r /scripts/ /shared/
          image: quay.io/devtron/test:e4758a86-1392-10818
          name: init-devtron-casbin
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      containers:
      - command:
            - /bin/sh
            - -c
            - 'if [ $(MIGRATE_TO_VERSION) -eq "0" ]; then migrate -path $(SCRIPT_LOCATION) -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable up;  else   echo $(MIGRATE_TO_VERSION); migrate -path $(SCRIPT_LOCATION)  -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable goto $(MIGRATE_TO_VERSION);    fi '
          env:
            - name: SCRIPT_LOCATION
              value: /shared/casbin/
            - name: DB_TYPE
              value: postgres
            - name: DB_USER_NAME
              value: postgres
            - name: DB_HOST
              value: postgresql-postgresql.devtroncd
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: casbin
            - name: MIGRATE_TO_VERSION
              value: "0"
          envFrom:
            - secretRef:
                name: postgresql-migrator   
          image: migrate/migrate
          name: postgresql-migrate-casbin
          volumeMounts:
            - mountPath: /shared
              name: shared-volume      
      restartPolicy: OnFailure
      imagePullSecrets:
      - name: devtron-image-pull
      volumes:
        - emptyDir: {}
          name: shared-volume 
  backoffLimit: 20
  activeDeadlineSeconds: 1500
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-migrate-gitsensor
spec:
  template:
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
       initContainers:
        - command:
            - /bin/sh
            - -c
            - cp -r sql /shared/
          image: quay.io/devtron/git-sensor:84389534-200-14705
          name: init-git-sensor
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      containers:
      - command:
            - /bin/sh
            - -c
            - 'if [ $(MIGRATE_TO_VERSION) -eq "0" ]; then migrate -path $(SCRIPT_LOCATION) -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable up;  else   echo $(MIGRATE_TO_VERSION); migrate -path $(SCRIPT_LOCATION)  -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable goto $(MIGRATE_TO_VERSION);    fi '
          env:
            - name: SCRIPT_LOCATION
              value: /shared/sql/
            - name: DB_TYPE
              value: postgres
            - name: DB_USER_NAME
              value: postgres
            - name: DB_HOST
              value: postgresql-postgresql.devtroncd
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: git_sensor
            - name: MIGRATE_TO_VERSION
              value: "0"
          envFrom:
            - secretRef:
                name: postgresql-migrator
          image: migrate/migrate
          name: postgresql-migrate-git-sensor
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      restartPolicy: OnFailure
      volumes:
        - emptyDir: {}
          name: shared-volume 
  backoffLimit: 20
  activeDeadlineSeconds: 1500
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-migrate-lens
spec:
  template:
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      initContainers:
        - command:
            - /bin/sh
            - -c
            - cp -r sql /shared/
          image: quay.io/devtron/lens:c5c40d94-333-14586
          name: init-lens-sensor
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      containers:
      - command:
            - /bin/sh
            - -c
            - 'if [ $(MIGRATE_TO_VERSION) -eq "0" ]; then migrate -path $(SCRIPT_LOCATION) -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable up;  else   echo $(MIGRATE_TO_VERSION); migrate -path $(SCRIPT_LOCATION)  -database postgres://$(DB_USER_NAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable goto $(MIGRATE_TO_VERSION);    fi '
          env:
            - name: SCRIPT_LOCATION
              value: /shared/sql/
            - name: DB_TYPE
              value: postgres
            - name: DB_USER_NAME
              value: postgres
            - name: DB_HOST
              value: postgresql-postgresql.devtroncd
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: lens
            - name: MIGRATE_TO_VERSION
              value: "0"
          envFrom:
            - secretRef:
                name: postgresql-migrator
          image: migrate/migrate
          name: postgresql-migrate-lens-sensor
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      restartPolicy: OnFailure
      volumes:
        - emptyDir: {}
          name: shared-volume
  backoffLimit: 20
  activeDeadlineSeconds: 1500
---
apiVersion: batch/v1
#this job is added for creating new database(clairv4).
#This database is needed for clair upgrade (v2 to v4), since old database does not support migration for new clair.
#Without this job, database can be created for new users, but not for existing users.
kind: Job
metadata:
  name: postgresql-miscellaneous
spec:
  ttlSecondsAfterFinished: 1000
  template:
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      containers:
      - name: postgresql-miscellaneous
        image: quay.io/devtron/postgres:11.9
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
          runAsNonRoot: true
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-postgresql
              key: postgresql-password
        - name: PGHOST
          value: postgresql-postgresql
        command:
          - /bin/sh
          - -c
          - psql -Upostgres -f /docker-entrypoint-initdb.d/db_create.sql
        volumeMounts:
          - name: custom-init-scripts
            mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: custom-init-scripts
          configMap:
            name: postgresql-postgresql-init-scripts
      restartPolicy: OnFailure
  backoffLimit: 20
  activeDeadlineSeconds: 1500
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: app-sync-cronjob
spec:
  schedule: "0 19 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: chart-sync
            image: quay.io/devtron/chart-sync:04a03402-373-13820
            env:
            - name: PG_ADDR
              value: postgresql-postgresql.devtroncd
            - name: PG_DATABASE
              value: orchestrator
            - name: PG_USER
              value: postgres
            envFrom:
            - secretRef:
                name: devtron-secret
          restartPolicy: Never
      backoffLimit: 4
